@page "/"

<PageTitle>监控</PageTitle>

@using PalServerTools.Data
@inject ConsoleService consoleService
@inject PalRconService palRconService
@inject PalProcessService palProcessService
@inject PalConfigService configService

<h1>监控</h1>

<div class="alert alert-secondary mt-4">
    <Card Title="基本信息" Style="width:100%;">
        <Body>
            <p>服务器版本： @serverInfo</p>
            <p>服务器状态： @(palProcessService.palServerState == Models.PalEnum.PalServerState.Stopped ? "停止" : "运行中")
                <Button Type="@ButtonType.Primary" Size="small" Icon="reload" OnClick="OnClickReload">重启</Button>
                @if (palProcessService.palServerState == Models.PalEnum.PalServerState.Stopped)
                {
                    <Button Type="@ButtonType.Primary" Size="small" Icon="poweroff" OnClick="OnClickStart">开机</Button>
                }
                else
                {
                    <Button Type="@ButtonType.Primary" Danger Icon="poweroff" Size="small" OnClick="OnClickClose">关机</Button>
                }
            </p>
            <p>
                自动重启：<Switch Size="small" @bind-Checked="configService.ToolsConfig.AutoRestart" OnChange="OnChangeAutomaticRestart" />
            </p>
        </Body>
    </Card>
</div>


@code {
    private string serverInfo = "";

    protected override async Task OnInitializedAsync()
    {
        if (palProcessService.palServerState == Models.PalEnum.PalServerState.Running)
        {
            serverInfo = await palRconService.Info();
        }
    }

    async Task OnClickStart()
    {
        palProcessService.StartProcess(); 
        this.StateHasChanged();
    }

    async Task OnClickClose()
    {
        palProcessService.CloseProcess(); 
        this.StateHasChanged();
    }

    async Task OnClickReload()
    {
        palProcessService.CloseProcess(); 
        this.StateHasChanged(); 
        palProcessService.StartProcess(); 
        this.StateHasChanged();
    }

    async Task OnChangeAutomaticRestart(bool value)
    {
        configService.ToolsConfig.AutoRestart = Convert.ToBoolean(value);
        configService.ToolsConfigSave();
    }
}