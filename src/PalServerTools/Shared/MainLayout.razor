@using PalServerTools.Pages
@using PalServerTools.Auth;
@using PalServerTools.Components;
@using PalServerTools.Data;
@inherits LayoutComponentBase

@inject NavigationManager nvm
@inject ImitateAuthStateProvider AuthStateProvider
@inject ClientConfigService ClientConfigService

<PageTitle>PalServerTools</PageTitle>

<div class="App" tomato-theme="@ClientConfigService?.ClientConfig?.Theme">
    <Space Direction="@DirectionVHType.Vertical" Style="width: 100%">
        <Layout Style="height: 100vh;">
            <SyMenu />
            <Layout Style="background-color:var(--ant-layout-body-bg);">
                <Content Class="sy-layout-content">
                    <AuthorizeView>
                        <Authorized>
                            @Body
                        </Authorized>
                        <NotAuthorized>
                            <div style="margin:120px 0;width:100%;text-align:center;color:red;">
                                <span style="font-size:20px">检测到登录超时，请重新<a href="/Login" style="text-decoration:underline">登录</a>!</span>
                            </div>
                            <RedirectToLogin></RedirectToLogin>   <!--加载组件，未登录时强制跳转-->
                        </NotAuthorized>
                    </AuthorizeView>
                </Content>
            </Layout>
        </Layout>
    </Space>
</div>

@code {
    private async Task SignOut()
    {
        await AuthStateProvider.SignOut();
        nvm.NavigateTo("/Login");
    }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        ClientConfigService.OnSave += () =>
        {
            this.StateHasChanged();
        };
    }
}
