@page "/"

<PageTitle>监控</PageTitle>

@using PalServerTools.Data
@inject ConsoleService consoleService
@inject PalRconService palRconService
@inject PalProcessService palProcessService
@inject ConfigService configService

<h1>监控</h1>

<div class="alert alert-secondary mt-4">
    <span class="oi oi-pencil me-2" aria-hidden="true"></span>
    <strong>服务器信息： </strong>

    <span class="text-nowrap">
        @serverInfo
    </span>
</div>

<div class="alert alert-secondary mt-4">
    <span class="oi oi-pencil me-2" aria-hidden="true"></span>
    <strong>服务器状态： </strong>

    <span class="text-nowrap">
        @(palProcessService.palServerState == Models.PalEnum.PalServerState.Stopped ? "停止" : "运行中")
    </span>

    <button type="button" class="btn btn-warning btn-sm" @onclick="()=>{palProcessService.CloseProcess();this.StateHasChanged();palProcessService.StartProcess();this.StateHasChanged();}">重启</button>
    @if (palProcessService.palServerState == Models.PalEnum.PalServerState.Stopped)
    {
        <button type="button" class="btn btn-primary btn-sm" @onclick="()=>{palProcessService.StartProcess();this.StateHasChanged();}">开机</button>
    }
    else
    {
        <button type="button" class="btn btn-danger btn-sm" @onclick="()=>{palProcessService.CloseProcess();this.StateHasChanged();}">关机</button>
    }

    <input class="form-check-input" type="checkbox" value="" id="flexCheckDefault" @onchange="OnChangeAutomaticRestart" checked="@configService.ToolsConfig.AutoRestart">
    <label class="form-check-label" for="flexCheckDefault" >
        自动重启
    </label>
</div>

@code {
    private string serverInfo = "";

    protected override async Task OnInitializedAsync()
    {
        if (palProcessService.palServerState == Models.PalEnum.PalServerState.Running)
        {
            serverInfo = await palRconService.Info();
        }
    }

    public async void OnChangeAutomaticRestart(ChangeEventArgs e)
    {
        configService.ToolsConfig.AutoRestart = Convert.ToBoolean(e.Value);
        configService.ToolsConfigSave();
    }
}